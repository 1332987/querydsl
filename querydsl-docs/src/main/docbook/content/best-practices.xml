<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">

<chapter id="best-practices" revision="1">
  <title>Best practices</title>
  
<!-- 
        * Interface based query usage
        * Custom query extensions    
 -->
 
  <sect1>
  
    <title>Interface based usage</title>
  
    <para>Whenever possible, use interface based query references : JDOQLQuery for JDO and HQLQuery for HQL</para>
  
  </sect1>
  
  <sect1>
  
    <title>Custom query extensions</title>
  
    <para>TODO</para>
  
  </sect1>
 
  <sect1 id="dao_integration">
  
  <title>DAO integration</title>
  
  <para>A practice which we have found to be very easy to use is to provide factory methods for 
  Query instances in DAO implementations in the following form.</para>
  
  <para>For HQL usage :</para>
  
<programlisting language="java"><![CDATA[ 
protected HQLQuery from(PEntity<?>... o) {
    return new HqlQueryImpl(session).from(o);
} 
]]></programlisting>  
  
  <para>For JDO usage : </para>
  
<programlisting language="java"><![CDATA[
protected JDOQLQuery from(PEntity<?>... o) {
    return new JDOQLQueryImpl(persistenceManager).from(o);
}        
]]></programlisting>         
  
  </sect1>     
  
  <sect1>
    <title>Overriding query types</title>
    
    <para>Use the com.mysema.query.annotations.QueryType annotation to override the query type on a field or method basis.</para>
    
    <para>Use the annotation like this : </para>

<programlisting language="java"><![CDATA[    
@QueryType(PropertyType.SIMPLE)    
private String stringAsSimple;    
]]></programlisting>

    <para>This will generate a PSimple typed query field for stringAsSimple.</para>
    
    <para>Use cases for this feature are blocking comparison operations for encrypted fields, adding support for custom literals etc.</para>
  
  </sect1>
  
</chapter>